
<div class="container mt-5 pt-5 ">
  <div class="card mb-3">
    <div class="row no-gutters">
      <div class="col-md-4">
        <img src="{{ recipe.image }}" class="card-img" alt="...">
      </div>
      <div class="col-md-8">
        <div class="card-body h-100 d-flex flex-column justify-content-between">
          <div class="recipe-title">
            <h5 class="card-title mb-1">{{ recipe.label }}</h5>
            <blockquote class="blockquote p-0 m-0 mb-3">
              <footer class="blockquote-footer">
                <small class="text-muted">
                  from <cite title="Source Title">{{ recipe.source }}</cite>
                </small>
              </footer>
            </blockquote>
          </div>
          <div class="recipe-info">
            <div class="row pb-4">
              <div class="col">
                {{#if recipe.totalTime}}
                  <h6 class="m-0">Total time: <strong>{{recipe.totalTime}} minutes</strong></h6>
                {{/if}}
                {{#if recipe.yield}}
                  <h6 class="m-0">Servings: <strong>{{recipe.yield}}</strong></h6>
                {{/if}}
              </div>
              <div class="col d-flex justify-content-end align-items-center">
                <div class="mr-2">
                  <a href="{{recipe.url}}" class="btn btn-primary btn-sm">
                    View Recipe Source
                    <i class="fas fa-link"></i>
                  </a>
                </div>
                <div>
                  {{#if recipe.isSaved}}
                    <button class="recipe-bookmark btn btn-warning btn-sm" data-recipe-uri="{{ getID recipe.uri }}"
                    data-recipe-data="{{getData recipe}}" id="btn-recipe-uri">
                      <i class="fas fa-bookmark mr-2"></i>
                      Saved
                    </button>
                  {{else}}
                    <button class="recipe-bookmark btn btn-secondary btn-sm" data-recipe-uri="{{ getID recipe.uri }}"
                      data-recipe-data="{{getData recipe}}">
                      <i class="fas fa-bookmark mr-2"></i>
                      Save
                    </button>
                  {{/if}}
                </div>
              </div>
            </div>
            
            <hr class="m-0 mb-2">
            <div class="d-flex justify-content-start align-items-center mt-3 mb-3">
              {{#each recipe.healthLabels}}
                <span class="badge badge-success mr-1">{{this}}</span>
              {{/each}}
            </div>
            {{#with recipe.totalNutrients}}
              <div class="d-flex justify-content-start mt-3 mb-3">
                <div class="d-flex flex-column rounded shadow mr-1">
                  <span class="badge badge-danger">kcal</span>
                  <small class="text-muted mx-auto">{{ round this.ENERC_KCAL.quantity}}</small>
                </div>
                <div class="d-flex flex-column rounded shadow mr-1">
                  <span class="badge badge-danger">fat</span>
                  <small class="text-muted mx-auto">{{ round this.FAT.quantity}}</small>
                </div>
                <div class="d-flex flex-column rounded shadow mr-1">
                  <span class="badge badge-danger">saturates</span>
                  <small class="text-muted mx-auto">{{ round this.FASAT.quantity}}g</small>
                </div>
                <div class="d-flex flex-column rounded shadow mr-1">
                  <span class="badge badge-danger">carbs</span>
                  <small class="text-muted mx-auto">{{ round this.CHOCDF.quantity}}g</small>
                </div>
                <div class="d-flex flex-column rounded shadow mr-1">
                  <span class="badge badge-danger">sugar</span>
                  <small class="text-muted mx-auto">{{ round this.SUGAR.quantity}}g</small>
                </div>
                <div class="d-flex flex-column rounded shadow mr-1">
                  <span class="badge badge-danger">fibre</span>
                  <small class="text-muted mx-auto">{{ round this.FIBTG.quantity}}g</small>
                </div>
                <div class="d-flex flex-column rounded shadow mr-1">
                  <span class="badge badge-danger">protein</span>
                  <small class="text-muted mx-auto">{{ round this.PROCNT.quantity}}g</small>
                </div>
                <div class="d-flex flex-column rounded shadow">
                  <span class="badge badge-danger">sodium</span>
                  <small class="text-muted mx-auto">{{ round this.NA.quantity}}mg</small>
                </div>
              </div>
            {{/with}}
          </div>
        </div>
      </div>
    </div>
  </div>
  <div class="card mt-3 mx-4">
    <div class="card-body">
      <h5 class="card-title">Ingredients</h5>
      <div class="mb-5">
        {{#each recipe.ingredients}}
          <p class="m-1">{{text}}</p>
        {{/each}}
      </div>
      <div class="row justify-content-center mt-3 mb-3">
        <div class="col-12 mt-3">
          {{#if user}}
          <h5>Private Notes</h5>
          <div class="social-actions-comments">
            <button type="button" class="btn btn-primary new-private-note" data-recipe-uri="{{ getID recipe.uri }}"
              data-recipe-data="{{getData recipe }}">New Private Note</button>
          </div>

          <div class="notes-container p-2">
            {{#each notes }}
            <div class="card rounded shadow-none border-bottom">
              <div class="card-body rounded p-1">
                <p class="card-text" contenteditable="true">{{body}}</p>
                <button type="button" class="btn btn-danger btn-sm">Delete</button>
              </div>
            </div>
            {{/each}}
          </div>
        </div>
      </div>

      <div class="row mb-3">
        <div class="col">
          <h5>Comments</h5>
          <div class="social-actions-comments mb-4">
            <button type="button" class="btn btn-primary new-comment" data-recipe-uri="{{ getID recipe.uri }}"
              data-recipe-data="{{getData recipe }}">New Comment</button>
          </div>
          <div class="comments-container">
            {{#each comments}}
            <div class="media mb-2">
              <img src="{{this.author.photoUrl}}" class="mr-3 rounded-circle" alt="..." style="max-width: 40px;">
              <div class="media-body">
                <h5 class="mt-0 mb-0">{{this.author.displayName}}</h5>
                {{this.body}}
              </div>
            </div>
            {{/each}}
          </div>
        </div>
      </div>

      {{else}}
      <p class="text-center pt-4">Please Sign In to Comment</p>
      {{/if}}
    </div>
  </div>
</div>



{{!-- NOTES & COMMENTS --}}
  




<script>
  document.addEventListener('click', e => {
    // Bookmark Recipe
    if (e.target.classList.contains('recipe-bookmark')) {
      //JSON - change value - stringify -
      const uri = e.target.dataset.recipeUri;
      const data = e.target.dataset.recipeData;

      axios.post(`/recipes/${uri}/save`, { data: data }).then(res => {
        const data = res.data;
        if (data.status === 200 && data.saved) {
          const dataTmp = JSON.parse(e.target.dataset.recipeData);
          dataTmp.isSaved = true;
          e.target.dataset.recipeData = JSON.stringify(dataTmp);
          e.target.classList.remove("btn-secondary");
          e.target.innerHTML = `
            <i class="fas fa-bookmark mr-2"></i>
            Saved
            `;
          e.target.classList.add("btn-warning");
        } else if (data.status === 200 && !data.saved) {
          const dataTmp = JSON.parse(e.target.dataset.recipeData);
          dataTmp.isSaved = false;
          e.target.dataset.recipeData = JSON.stringify(dataTmp);
          e.target.classList.remove("btn-warning");
          e.target.innerHTML = `
            <i class="fas fa-bookmark mr-2"></i>
            Save
            `;
          e.target.classList.add("btn-secondary");
        }
      });
      // New Comment
    } else if (e.target.classList.contains("new-comment")) {

      const uri = e.target.dataset.recipeUri;
      const $commentForm = document.createElement("div");
      $commentForm.classList.add("form-group", "comment-form");
      $commentForm.innerHTML = `
          <textarea class="form-control" name="body" id="" cols="30" rows="3"></textarea>
          <button class="btn btn-primary submit-comment" id="commentTo_${uri}">Submit</button>
          <button class="btn btn-dark cancel-comment">Cancel</button>
        `;
      e.target.parentNode.append($commentForm);
    } else if (e.target.classList.contains("submit-comment")) {

      const uri = e.target.id.split("_")[1];
      const data = {
        body: e.target.previousElementSibling.value,
      }

      axios.post(`/recipes/${uri}/comment/new`, { data: data }).then(res => {
        const data = res.data;
        if (data.status === 200) {
          const $comment = document.createElement("div");
          $comment.classList.add("media", "mb-2");
          $comment.innerHTML = `
            <img src="${data.newComment.author.photoUrl}" class="mr-3 rounded-circle" alt="..." style="max-width: 40px;">
            <div class="media-body">
              <h5 class="mt-0 mb-0">${data.newComment.author.displayName}</h5>
              ${data.newComment.body}
            </div>
          `;
          const $commentContainer = document.querySelector(".comments-container");
          $commentContainer.prepend($comment);
        }

        const $prevForm = document.querySelector(".comment-form");
        e.target.parentNode.parentNode.removeChild($prevForm);
      });
    } else if (e.target.classList.contains("cancel-comment")) {
      const $prevForm = document.querySelector(".comment-form");
      e.target.parentNode.parentNode.removeChild($prevForm);

      //NEW PRIVATE NOTE
    } else if (e.target.classList.contains("new-private-note")) {

      const uri = e.target.dataset.recipeUri;
      const $noteForm = document.createElement("div");
      $noteForm.classList.add("form-group", "note-form");
      $noteForm.innerHTML = `
        <textarea class="form-control" name="body" id="" cols="30" rows="3"></textarea>
        <button class="btn btn-primary submit-note" id="noteTo_${uri}">Save</button>
        <button class="btn btn-dark cancel-note">Cancel</button>
      `;
      e.target.parentNode.append($noteForm);

    } else if (e.target.classList.contains("submit-note")) {

      const uri = e.target.id.split("_")[1];
      const data = {
        body: e.target.previousElementSibling.value,
      }

      axios.post(`/recipes/${uri}/private-note/new`, { data: data }).then(res => {
        const data = res.data;
        console.log(data);
        if (data.status === 200) {
          const $note = document.createElement("div");
          $note.classList.add("card", "mb-2", "rounded", "shadow-nonde", "border-bottom");
          $note.innerHTML = `
            <div class="card-body rounded p-1">
              <p class="card-text" contenteditable="true">${data.newNote.body}</p>
            </div>
          `;
          const $noteContainer = document.querySelector(".notes-container");
          $noteContainer.prepend($note);
        }

        const $prevForm = document.querySelector(".note-form");
        e.target.parentNode.parentNode.removeChild($prevForm);
      });
    } else if (e.target.classList.contains("cancel-note")) {
      const $prevForm = document.querySelector(".note-form");
      e.target.parentNode.parentNode.removeChild($prevForm);
    }
  });
</script>
