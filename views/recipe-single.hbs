

<div class="card bg-light w-75 mx-auto m-5 shadow-none">

  <img src="{{ recipe.image }}" class="card-img-top" alt="..." style="max-height: 200px; object-fit: cover;">
  <div class="card-body text-wrap">
    <h3 class="card-title mb-5">{{ recipe.label }}</h3>
    <p class="card-text">
      <span class="font-weight-bold">Ingredients</span>
      <ul>
        {{#each recipe.ingredients}}
        <li>{{text}}</li>
        {{/each}}
      </ul>
      
      {{#if recipe.yield}}
        <span class="font-weight-bold">Portions</span> <br />
        <ul>
          <li>{{recipe.yield}}</li>
        </ul>
      {{/if}}
      
      {{#if recipe.totalTime}}
        <span class="font-weight-bold">Total time</span> <br />
        <ul>
          <li>{{recipe.totalTime}}</li>
        </ul>
      {{/if}}

      <ul class="list-group mb-3 w-25 mx-auto text-wrap">
        {{#each recipe.healthLabels}}
        <li class="list-group-item list-group-item-success text-center">{{ this }}</li>
        {{/each}}
      </ul>

      <a class="btn btn-primary" target="_blank" href="{{recipe.url}}">View Recipe <span
          class="fa fa-external-link"></span></a>

      {{#if recipe.isSaved}}
      <button class="recipe-bookmark btn btn-warning" data-recipe-uri="{{ getID recipe.uri }}"
        data-recipe-data="{{getData recipe}}" id="btn-recipe-uri">Saved</button>
      {{else}}
      <button class="recipe-bookmark btn btn-secondary" data-recipe-uri="{{ getID recipe.uri }}"
        data-recipe-data="{{getData recipe}}">Save</button>
      {{/if}}
    </p>


  {{#if user}}
    <h4>Private Notes</h4>
    <div class="social-actions-comments">
      <button type="button" class="btn btn-primary new-private-note" data-recipe-uri="{{ getID recipe.uri }}" data-recipe-data="{{getData recipe }}">New Private Note</button>
    </div>

    <div class="notes-container p-2">
      {{#each notes }}
        <div class="card rounded">
          <div class="card-body rounded p-1">
            <p class="card-text" contenteditable="true">{{body}}</p>
          </div>
        </div>
      {{/each}}
    </div>


    <h4>Comments</h4>
    <div class="social-actions-comments">
      <button type="button" class="btn btn-primary new-comment" data-recipe-uri="{{ getID recipe.uri }}" data-recipe-data="{{getData recipe }}">New Comment</button>
    </div>
    <div class="comments-container">
      {{#each comments}}
        <div class="media mb-2">
          <img src="{{this.author.photoUrl}}" class="mr-3 rounded-circle" alt="..." style="max-width: 40px;">
          <div class="media-body">
            <h5 class="mt-0 mb-0">{{this.author.displayName}}</h5>
            {{this.body}}
          </div>
        </div>
      {{/each}}
    </div>
    


  {{else}}
    Please Sign In to Comment
  {{/if}}
  </div>


  


  

</div>





<script>
  document.addEventListener('click', e => {
    // Bookmark Recipe
    if (e.target.classList.contains('recipe-bookmark')) {
      //JSON - change value - stringify -
      const uri = e.target.dataset.recipeUri;
      const data = e.target.dataset.recipeData;

      axios.post(`/recipes/${uri}/save`, { data: data }).then(res => {
        const data = res.data;
        if (data.status === 200 && data.saved) {
          const dataTmp = JSON.parse(e.target.dataset.recipeData);
          dataTmp.isSaved = true;
          e.target.dataset.recipeData = JSON.stringify(dataTmp);
          e.target.classList.remove("btn-secondary");
          e.target.innerText = "Saved";
          e.target.classList.add("btn-warning");
        } else if (data.status === 200 && !data.saved) {
          const dataTmp = JSON.parse(e.target.dataset.recipeData);
          dataTmp.isSaved = false;
          e.target.dataset.recipeData = JSON.stringify(dataTmp);
          e.target.classList.remove("btn-warning");
          e.target.innerText = "Save";
          e.target.classList.add("btn-secondary");
        }
      });
      // New Comment
    } else if(e.target.classList.contains("new-comment")) {

        const uri = e.target.dataset.recipeUri;
        const $commentForm = document.createElement("div");
        $commentForm.classList.add("form-group", "comment-form");
        $commentForm.innerHTML = `
          <textarea class="form-control" name="body" id="" cols="30" rows="3"></textarea>
          <button class="btn btn-primary submit-comment" id="commentTo_${uri}">Submit</button>
          <button class="btn btn-dark cancel-comment">Cancel</button>
        `;
        e.target.parentNode.append($commentForm);
    } else if(e.target.classList.contains("submit-comment")) {

      const uri = e.target.id.split("_")[1]; 
      const data = {
        body: e.target.previousElementSibling.value,
      }

      axios.post(`/recipes/${uri}/comment/new`, { data: data }).then(res => {
        const data = res.data;
        if (data.status === 200) {
          const $comment = document.createElement("div");
          $comment.classList.add("media", "mb-2");
          $comment.innerHTML = `
            <img src="${data.newComment.author.photoUrl}" class="mr-3 rounded-circle" alt="..." style="max-width: 40px;">
            <div class="media-body">
              <h5 class="mt-0 mb-0">${data.newComment.author.displayName}</h5>
              ${data.newComment.body}
            </div>
          `;
          const $commentContainer = document.querySelector(".comments-container");
          $commentContainer.prepend($comment);
        } 

        const $prevForm = document.querySelector(".comment-form");
        e.target.parentNode.parentNode.removeChild($prevForm);
      });
    } else if (e.target.classList.contains("cancel-comment")) {
      const $prevForm = document.querySelector(".comment-form");
      e.target.parentNode.parentNode.removeChild($prevForm);

      //NEW PRIVATE NOTE
    } else if(e.target.classList.contains("new-private-note")) {

      const uri = e.target.dataset.recipeUri;
      const $noteForm = document.createElement("div");
      $noteForm.classList.add("form-group", "note-form");
      $noteForm.innerHTML = `
        <input type="text" name="title">
        <textarea class="form-control" name="body" id="" cols="30" rows="3"></textarea>
        <button class="btn btn-primary submit-note" id="noteTo_${uri}">Save</button>
        <button class="btn btn-dark cancel-note">Cancel</button>
      `;
      e.target.parentNode.append($noteForm);

    } else if(e.target.classList.contains("submit-note")) {

      const uri = e.target.id.split("_")[1]; 
      const data = {
        title: e.target.previousElementSibling.previousElementSibling.value,
        body: e.target.previousElementSibling.value,
      }

      axios.post(`/recipes/${uri}/private-note/new`, { data: data }).then(res => {
        const data = res.data;
        console.log(data);
        if (data.status === 200) {
          const $note = document.createElement("div");
          $note.classList.add("card", "mb-2");
          $note.innerHTML = `
            <h5 class="card-title">${data.newNote.title}</h5>
            <div class="card-body">
              <p class="card-text" contenteditable="true">${data.newNote.body}</p>
            </div>
          `;
          const $noteContainer = document.querySelector(".notes-container");
          $noteContainer.prepend($note);
        } 

        const $prevForm = document.querySelector(".note-form");
        e.target.parentNode.parentNode.removeChild($prevForm);
      });
    } else if (e.target.classList.contains("cancel-note")) {
      const $prevForm = document.querySelector(".note-form");
      e.target.parentNode.parentNode.removeChild($prevForm);
    }
  });

</script>